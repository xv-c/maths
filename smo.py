import numpy as np

# Данные из таблицы
G = np.array(
    [0.738, 0.746, 0.765, 0.753, 0.765, 0.727, 0.736, 0.725, 0.728, 0.731, 0.742, 0.747, 0.741, 0.725, 0.738, 0.742,
     0.736, 0.715, 0.725, 0.735, 0.736, 0.741, 0.765])
Sg = np.array(
    [1.564, 1.571, 1.559, 1.544, 1.573, 1.557, 1.571, 1.579, 1.585, 1.571, 1.569, 1.554, 1.583, 1.573, 1.581, 1.584,
     1.531, 1.549, 1.577, 1.586, 1.587, 1.553, 1.579])

H = np.array(
    [2.508, 2.504, 2.416, 2.431, 2.442, 2.508, 2.500, 2.446, 2.511, 2.510, 2.436, 2.451, 2.472, 2.442, 2.512, 2.473,
     2.504, 2.436, 2.452, 2.515, 2.447, 2.516, 2.446])
Sh = np.array(
    [2.583, 2.579, 2.582, 2.589, 2.572, 2.598, 2.581, 2.585, 2.578, 2.591, 2.582, 2.599, 2.587, 2.592, 2.588, 2.589,
     2.575, 2.582, 2.572, 2.588, 2.590, 2.569, 2.584])

# Количество испытаний
n = 10000

# Значение t для уровня достоверности 0.99
t = 2.58

# Расчет доверительных интервалов
epsilon_g = t * Sg / np.sqrt(n)
epsilon_h = t * Sh / np.sqrt(n)

# Расчет доверительных интервалов для каждого испытания
for i in range(len(G)):
    print(f"Испытание {i + 1}:")
    print(f"E = {epsilon_g[i]}")
    print(f"Доверительный интервал для g: {G[i] - epsilon_g[i]} < m * g < {G[i] + epsilon_g[i]}")
    print(f"Доверительный интервал для h: {H[i] - epsilon_h[i]} < m * h < {H[i] + epsilon_h[i]}")
    print()
